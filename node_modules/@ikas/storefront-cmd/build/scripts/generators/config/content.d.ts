export declare const DEPENDENCIES: {
    "@ikas/storefront": string;
    "@ikas/storefront-peer-deps": string;
};
export declare const DEV_DEPENDENCIES: {};
export declare const RESOLUTIONS: {
    "@types/react": string;
    "@types/react-dom": string;
};
export declare const SCRIPTS: {
    upgradeDependencies: string;
    dev: string;
    build: string;
    start: string;
    generate: string;
    "prettier:all": string;
};
export declare const TS_CONFIG = "{\n  \"compilerOptions\": {\n    \"target\": \"esnext\",\n    \"lib\": [\n      \"dom\",\n      \"dom.iterable\",\n      \"esnext\"\n    ],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"experimentalDecorators\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"baseUrl\": \".\",\n    \"useUnknownInCatchVariables\": false,\n    \"incremental\": true\n  },\n  \"typeRoots\": [\n    \"./node_modules/@types\"\n  ],\n  \"include\": [\n    \"next-env.d.ts\",\n    \"**/*.ts\",\n    \"**/*.tsx\",\n    \"**/typings/global.d.ts\",\n    \"**/typings/*.ts\",\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"./src/pages/api\",\n  ]\n}";
export declare const NEXT_CONFIG = "const withTM = require(\"next-transpile-modules\")([\n  \"@ikas/storefront\",\n  \"@ikas/storefront-api\",\n  \"@ikas/storefront-assets\",\n  \"@ikas/storefront-cmd\",\n  \"@ikas/storefront-config\",\n  \"@ikas/storefront-model-functions\",\n  \"@ikas/storefront-models\",\n  \"@ikas/storefront-next\",\n  \"@ikas/storefront-providers\",\n]);\n\nconst config = {\n  i18n: {\n    defaultLocale: \"en\",\n    locales: [\"en\"],\n    localeDetection: false,\n  },\n  basePath: process.env.NEXTJS_BASE_PATH || \"\",\n\n  images: {\n    deviceSizes: [\n      180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2560, 3840,\n    ],\n  },\n\n  webpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {\n    if (!isServer) {\n      config.resolve.fallback.fs = false;\n      config.resolve.fallback.net = false;\n      config.resolve.fallback.encoding = false;\n      config.resolve.fallback.crypto = false;\n      config.resolve.fallback.assert = false;\n      config.resolve.fallback.stream = false;\n      config.module.rules = [\n        ...config.module.rules,\n        {\n          test: /@ikas/i,\n          sideEffects: false,\n        },\n      ];\n    }\n    return config;\n  },\n};\n\nmodule.exports = withTM(config);";
export declare const DEV_ENV = "NEXT_PUBLIC_ENV=local\nNEXT_PUBLIC_BASE_URL=https://api.myikas.dev/api/sf\nNEXT_PUBLIC_CDN_URL=https://cdn.myikas.dev/\nNEXT_PUBLIC_GQL_URL=https://api.myikas.dev/api/sf/graphql\nNEXT_PUBLIC_PARTNER_GQL_URL=https://api.myikas.dev/api/partners/graphql\n";
export declare const PROD_ENV = "NEXT_PUBLIC_ENV=local\nNEXT_PUBLIC_BASE_URL=https://api.myikas.com/api/sf\nNEXT_PUBLIC_CDN_URL=https://cdn.myikas.com/\nNEXT_PUBLIC_GQL_URL=https://api.myikas.com/api/sf/graphql\nNEXT_PUBLIC_PARTNER_GQL_URL=https://api.myikas.com/api/partners/graphql\n";
export declare const BABEL_RC = "{\n  \"presets\": [\n    [\n      \"next/babel\",\n      {\n        \"preset-react\": { \"throwIfNamespace\": false },\n      }\n    ]\n  ],\n  \"plugins\": []\n}";
