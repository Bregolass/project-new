var e={"@ikas/storefront":"^4.0.0","@ikas/storefront-peer-deps":"^4.0.0"},n={},s={"@types/react":"17.0.2","@types/react-dom":"17.0.2"},t={upgradeDependencies:"yarn upgrade @ikas/storefront @ikas/storefront-peer-deps",dev:"next dev -p 3333",build:"next build",start:"next start",generate:"ikas --generate","prettier:all":"npx prettier@^2.1 './**/src/**/*.(ts|tsx|css|scss)' --write"},a='{\n  "compilerOptions": {\n    "target": "esnext",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "esnext"\n    ],\n    "allowJs": true,\n    "skipLibCheck": true,\n    "strict": true,\n    "forceConsistentCasingInFileNames": true,\n    "experimentalDecorators": true,\n    "noEmit": true,\n    "esModuleInterop": true,\n    "module": "esnext",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n    "jsx": "preserve",\n    "baseUrl": ".",\n    "useUnknownInCatchVariables": false,\n    "incremental": true\n  },\n  "typeRoots": [\n    "./node_modules/@types"\n  ],\n  "include": [\n    "next-env.d.ts",\n    "**/*.ts",\n    "**/*.tsx",\n    "**/typings/global.d.ts",\n    "**/typings/*.ts",\n  ],\n  "exclude": [\n    "node_modules",\n    "./src/pages/api",\n  ]\n}',r='const withTM = require("next-transpile-modules")([\n  "@ikas/storefront",\n  "@ikas/storefront-api",\n  "@ikas/storefront-assets",\n  "@ikas/storefront-cmd",\n  "@ikas/storefront-config",\n  "@ikas/storefront-model-functions",\n  "@ikas/storefront-models",\n  "@ikas/storefront-next",\n  "@ikas/storefront-providers",\n]);\n\nconst config = {\n  i18n: {\n    defaultLocale: "en",\n    locales: ["en"],\n    localeDetection: false,\n  },\n  basePath: process.env.NEXTJS_BASE_PATH || "",\n\n  images: {\n    deviceSizes: [\n      180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2560, 3840,\n    ],\n  },\n\n  webpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {\n    if (!isServer) {\n      config.resolve.fallback.fs = false;\n      config.resolve.fallback.net = false;\n      config.resolve.fallback.encoding = false;\n      config.resolve.fallback.crypto = false;\n      config.resolve.fallback.assert = false;\n      config.resolve.fallback.stream = false;\n      config.module.rules = [\n        ...config.module.rules,\n        {\n          test: /@ikas/i,\n          sideEffects: false,\n        },\n      ];\n    }\n    return config;\n  },\n};\n\nmodule.exports = withTM(config);',o="NEXT_PUBLIC_ENV=local\nNEXT_PUBLIC_BASE_URL=https://api.myikas.dev/api/sf\nNEXT_PUBLIC_CDN_URL=https://cdn.myikas.dev/\nNEXT_PUBLIC_GQL_URL=https://api.myikas.dev/api/sf/graphql\nNEXT_PUBLIC_PARTNER_GQL_URL=https://api.myikas.dev/api/partners/graphql\n",i="NEXT_PUBLIC_ENV=local\nNEXT_PUBLIC_BASE_URL=https://api.myikas.com/api/sf\nNEXT_PUBLIC_CDN_URL=https://cdn.myikas.com/\nNEXT_PUBLIC_GQL_URL=https://api.myikas.com/api/sf/graphql\nNEXT_PUBLIC_PARTNER_GQL_URL=https://api.myikas.com/api/partners/graphql\n",l='{\n  "presets": [\n    [\n      "next/babel",\n      {\n        "preset-react": { "throwIfNamespace": false },\n      }\n    ]\n  ],\n  "plugins": []\n}';export{l as BABEL_RC,e as DEPENDENCIES,n as DEV_DEPENDENCIES,o as DEV_ENV,r as NEXT_CONFIG,i as PROD_ENV,s as RESOLUTIONS,t as SCRIPTS,a as TS_CONFIG};
