import { ConfigType, APIResponse } from "@ikas/fe-api-client";
import { CategoryPathFilterInput, StringFilterInput, PaginationInput, DateFilterInput, CategoryPaginationResponse } from "../types";
declare const listCategory: (variables: QueryParams, fields?: string[], config?: ConfigType) => Promise<APIResponse<CategoryPaginationResponse> | APIResponse<undefined>>;
export default listCategory;
export declare type QueryParams = {
    categoryPath?: CategoryPathFilterInput | null;
    id?: StringFilterInput | null;
    includeDeleted?: boolean | null;
    name?: StringFilterInput | null;
    pagination?: PaginationInput | null;
    search?: string | null;
    sort?: string | null;
    updatedAt?: DateFilterInput | null;
};
export declare enum ResponseField {
    COUNT = "count",
    DATA__CATEGORY_PATH = "data.categoryPath",
    DATA__CATEGORY_PATH_ITEMS__CREATED_AT = "data.categoryPathItems.createdAt",
    DATA__CATEGORY_PATH_ITEMS__DELETED = "data.categoryPathItems.deleted",
    DATA__CATEGORY_PATH_ITEMS__DESCRIPTION = "data.categoryPathItems.description",
    DATA__CATEGORY_PATH_ITEMS__ID = "data.categoryPathItems.id",
    DATA__CATEGORY_PATH_ITEMS__IMAGE_ID = "data.categoryPathItems.imageId",
    DATA__CATEGORY_PATH_ITEMS__IS_AUTOMATED = "data.categoryPathItems.isAutomated",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__CANONICALS = "data.categoryPathItems.metaData.canonicals",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__CREATED_AT = "data.categoryPathItems.metaData.createdAt",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__DELETED = "data.categoryPathItems.metaData.deleted",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__DESCRIPTION = "data.categoryPathItems.metaData.description",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__DISABLE_INDEX = "data.categoryPathItems.metaData.disableIndex",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__ID = "data.categoryPathItems.metaData.id",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__METADATA_OVERRIDES__DESCRIPTION = "data.categoryPathItems.metaData.metadataOverrides.description",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__METADATA_OVERRIDES__LANGUAGE = "data.categoryPathItems.metaData.metadataOverrides.language",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__METADATA_OVERRIDES__PAGE_TITLE = "data.categoryPathItems.metaData.metadataOverrides.pageTitle",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__METADATA_OVERRIDES__STOREFRONT_ID = "data.categoryPathItems.metaData.metadataOverrides.storefrontId",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__METADATA_OVERRIDES__STOREFRONT_REGION_ID = "data.categoryPathItems.metaData.metadataOverrides.storefrontRegionId",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__PAGE_TITLE = "data.categoryPathItems.metaData.pageTitle",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__REDIRECT_TO = "data.categoryPathItems.metaData.redirectTo",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__SLUG = "data.categoryPathItems.metaData.slug",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__TARGET_ID = "data.categoryPathItems.metaData.targetId",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__TARGET_TYPE = "data.categoryPathItems.metaData.targetType",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__TRANSLATIONS__DESCRIPTION = "data.categoryPathItems.metaData.translations.description",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__TRANSLATIONS__LOCALE = "data.categoryPathItems.metaData.translations.locale",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__TRANSLATIONS__PAGE_TITLE = "data.categoryPathItems.metaData.translations.pageTitle",
    DATA__CATEGORY_PATH_ITEMS__META_DATA__UPDATED_AT = "data.categoryPathItems.metaData.updatedAt",
    DATA__CATEGORY_PATH_ITEMS__NAME = "data.categoryPathItems.name",
    DATA__CATEGORY_PATH_ITEMS__TRANSLATIONS__DESCRIPTION = "data.categoryPathItems.translations.description",
    DATA__CATEGORY_PATH_ITEMS__TRANSLATIONS__LOCALE = "data.categoryPathItems.translations.locale",
    DATA__CATEGORY_PATH_ITEMS__TRANSLATIONS__NAME = "data.categoryPathItems.translations.name",
    DATA__CATEGORY_PATH_ITEMS__UPDATED_AT = "data.categoryPathItems.updatedAt",
    DATA__CONDITIONS__CONDITION_TYPE = "data.conditions.conditionType",
    DATA__CONDITIONS__VALUE_LIST = "data.conditions.valueList",
    DATA__CREATED_AT = "data.createdAt",
    DATA__DELETED = "data.deleted",
    DATA__DESCRIPTION = "data.description",
    DATA__ID = "data.id",
    DATA__IMAGE_ID = "data.imageId",
    DATA__IS_AUTOMATED = "data.isAutomated",
    DATA__META_DATA__CANONICALS = "data.metaData.canonicals",
    DATA__META_DATA__CREATED_AT = "data.metaData.createdAt",
    DATA__META_DATA__DELETED = "data.metaData.deleted",
    DATA__META_DATA__DESCRIPTION = "data.metaData.description",
    DATA__META_DATA__DISABLE_INDEX = "data.metaData.disableIndex",
    DATA__META_DATA__ID = "data.metaData.id",
    DATA__META_DATA__METADATA_OVERRIDES__DESCRIPTION = "data.metaData.metadataOverrides.description",
    DATA__META_DATA__METADATA_OVERRIDES__LANGUAGE = "data.metaData.metadataOverrides.language",
    DATA__META_DATA__METADATA_OVERRIDES__PAGE_TITLE = "data.metaData.metadataOverrides.pageTitle",
    DATA__META_DATA__METADATA_OVERRIDES__STOREFRONT_ID = "data.metaData.metadataOverrides.storefrontId",
    DATA__META_DATA__METADATA_OVERRIDES__STOREFRONT_REGION_ID = "data.metaData.metadataOverrides.storefrontRegionId",
    DATA__META_DATA__PAGE_TITLE = "data.metaData.pageTitle",
    DATA__META_DATA__REDIRECT_TO = "data.metaData.redirectTo",
    DATA__META_DATA__SLUG = "data.metaData.slug",
    DATA__META_DATA__TARGET_ID = "data.metaData.targetId",
    DATA__META_DATA__TARGET_TYPE = "data.metaData.targetType",
    DATA__META_DATA__TRANSLATIONS__DESCRIPTION = "data.metaData.translations.description",
    DATA__META_DATA__TRANSLATIONS__LOCALE = "data.metaData.translations.locale",
    DATA__META_DATA__TRANSLATIONS__PAGE_TITLE = "data.metaData.translations.pageTitle",
    DATA__META_DATA__UPDATED_AT = "data.metaData.updatedAt",
    DATA__NAME = "data.name",
    DATA__ORDER_TYPE = "data.orderType",
    DATA__PARENT_ID = "data.parentId",
    DATA__SALES_CHANNEL_IDS = "data.salesChannelIds",
    DATA__SHOULD_MATCH_ALL_CONDITIONS = "data.shouldMatchAllConditions",
    DATA__TRANSLATIONS__DESCRIPTION = "data.translations.description",
    DATA__TRANSLATIONS__LOCALE = "data.translations.locale",
    DATA__TRANSLATIONS__NAME = "data.translations.name",
    DATA__UPDATED_AT = "data.updatedAt",
    HAS_NEXT = "hasNext",
    LIMIT = "limit",
    PAGE = "page"
}
