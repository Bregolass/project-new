import { ConfigType, APIResponse } from "@ikas/fe-api-client";
import { StringFilterInput, PaginationInput, PaymentGateway } from "../types";
declare const listPaymentGateway: (variables: QueryParams, fields?: string[], config?: ConfigType) => Promise<APIResponse<PaymentGateway[]> | APIResponse<undefined>>;
export default listPaymentGateway;
export declare type QueryParams = {
    id?: StringFilterInput | null;
    includeDeleted?: boolean | null;
    locale?: string | null;
    pagination?: PaginationInput | null;
    transactionAmount?: number | null;
};
export declare enum ResponseField {
    ADDITIONAL_PRICES__AMOUNT = "additionalPrices.amount",
    ADDITIONAL_PRICES__AMOUNT_TYPE = "additionalPrices.amountType",
    ADDITIONAL_PRICES__NAME = "additionalPrices.name",
    ADDITIONAL_PRICES__TYPE = "additionalPrices.type",
    AVAILABLE_COUNTRIES = "availableCountries",
    CODE = "code",
    CREATED_AT = "createdAt",
    DELETED = "deleted",
    DESCRIPTION = "description",
    ID = "id",
    IS_PASSIVE = "isPassive",
    LOGO_URL = "logoUrl",
    MASTER_PASS_CLIENT_ID = "masterPassClientId",
    NAME = "name",
    PAYMENT_GATEWAY_PROVIDER_ID = "paymentGatewayProviderId",
    PAYMENT_METHOD_TYPE = "paymentMethodType",
    PAYMENT_METHODS__LOGO_URL = "paymentMethods.logoUrl",
    PAYMENT_METHODS__NAME = "paymentMethods.name",
    SETTINGS__LABEL = "settings.label",
    SETTINGS__ORDER = "settings.order",
    SETTINGS__TYPE = "settings.type",
    SETTINGS__VALUE = "settings.value",
    SUPPORTED_CURRENCIES = "supportedCurrencies",
    TEST_MODE = "testMode",
    TRANSLATIONS__DESCRIPTION = "translations.description",
    TRANSLATIONS__LOCALE = "translations.locale",
    TRANSLATIONS__NAME = "translations.name",
    TYPE = "type",
    UPDATED_AT = "updatedAt"
}
