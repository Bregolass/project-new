import { ConfigType, APIResponse } from "@ikas/fe-api-client";
import { StringFilterInput, PaginationInput, DateFilterInput, BlogPaginationResponse } from "../types";
declare const listBlog: (variables: QueryParams, fields?: string[], config?: ConfigType) => Promise<APIResponse<BlogPaginationResponse> | APIResponse<undefined>>;
export default listBlog;
export declare type QueryParams = {
    categoryId?: StringFilterInput | null;
    id?: StringFilterInput | null;
    includeDeleted?: boolean | null;
    pagination?: PaginationInput | null;
    search?: string | null;
    storefrontId?: StringFilterInput | null;
    tagId?: StringFilterInput | null;
    title?: StringFilterInput | null;
    updatedAt?: DateFilterInput | null;
};
export declare enum ResponseField {
    COUNT = "count",
    DATA__BLOG_CONTENT__CONTENT = "data.blogContent.content",
    DATA__BLOG_CONTENT__CONTENT_DATA = "data.blogContent.contentData",
    DATA__BLOG_CONTENT__CONTENT_SOURCE = "data.blogContent.contentSource",
    DATA__BLOG_CONTENT__CREATED_AT = "data.blogContent.createdAt",
    DATA__BLOG_CONTENT__DELETED = "data.blogContent.deleted",
    DATA__BLOG_CONTENT__ID = "data.blogContent.id",
    DATA__BLOG_CONTENT__UPDATED_AT = "data.blogContent.updatedAt",
    DATA__CATEGORY__CREATED_AT = "data.category.createdAt",
    DATA__CATEGORY__DELETED = "data.category.deleted",
    DATA__CATEGORY__ID = "data.category.id",
    DATA__CATEGORY__IMAGE_ID = "data.category.imageId",
    DATA__CATEGORY__METADATA__CANONICALS = "data.category.metadata.canonicals",
    DATA__CATEGORY__METADATA__CREATED_AT = "data.category.metadata.createdAt",
    DATA__CATEGORY__METADATA__DELETED = "data.category.metadata.deleted",
    DATA__CATEGORY__METADATA__DESCRIPTION = "data.category.metadata.description",
    DATA__CATEGORY__METADATA__DISABLE_INDEX = "data.category.metadata.disableIndex",
    DATA__CATEGORY__METADATA__ID = "data.category.metadata.id",
    DATA__CATEGORY__METADATA__PAGE_TITLE = "data.category.metadata.pageTitle",
    DATA__CATEGORY__METADATA__SLUG = "data.category.metadata.slug",
    DATA__CATEGORY__METADATA__TARGET_ID = "data.category.metadata.targetId",
    DATA__CATEGORY__METADATA__TARGET_TYPE = "data.category.metadata.targetType",
    DATA__CATEGORY__METADATA__UPDATED_AT = "data.category.metadata.updatedAt",
    DATA__CATEGORY__NAME = "data.category.name",
    DATA__CATEGORY__UPDATED_AT = "data.category.updatedAt",
    DATA__CATEGORY_ID = "data.categoryId",
    DATA__CREATED_AT = "data.createdAt",
    DATA__DELETED = "data.deleted",
    DATA__ID = "data.id",
    DATA__IMAGE_ID = "data.imageId",
    DATA__IS_PUBLISHED = "data.isPublished",
    DATA__LOCALE = "data.locale",
    DATA__METADATA__CANONICALS = "data.metadata.canonicals",
    DATA__METADATA__CREATED_AT = "data.metadata.createdAt",
    DATA__METADATA__DELETED = "data.metadata.deleted",
    DATA__METADATA__DESCRIPTION = "data.metadata.description",
    DATA__METADATA__DISABLE_INDEX = "data.metadata.disableIndex",
    DATA__METADATA__ID = "data.metadata.id",
    DATA__METADATA__PAGE_TITLE = "data.metadata.pageTitle",
    DATA__METADATA__SLUG = "data.metadata.slug",
    DATA__METADATA__TARGET_ID = "data.metadata.targetId",
    DATA__METADATA__TARGET_TYPE = "data.metadata.targetType",
    DATA__METADATA__UPDATED_AT = "data.metadata.updatedAt",
    DATA__PUBLISHED_AT = "data.publishedAt",
    DATA__SHORT_DESCRIPTION = "data.shortDescription",
    DATA__STOREFRONT_ID = "data.storefrontId",
    DATA__TAG_IDS = "data.tagIds",
    DATA__TAGS__CREATED_AT = "data.tags.createdAt",
    DATA__TAGS__DELETED = "data.tags.deleted",
    DATA__TAGS__ID = "data.tags.id",
    DATA__TAGS__NAME = "data.tags.name",
    DATA__TAGS__UPDATED_AT = "data.tags.updatedAt",
    DATA__TITLE = "data.title",
    DATA__UPDATED_AT = "data.updatedAt",
    DATA__WRITER__FIRST_NAME = "data.writer.firstName",
    DATA__WRITER__LAST_NAME = "data.writer.lastName",
    HAS_NEXT = "hasNext",
    LIMIT = "limit",
    PAGE = "page"
}
