import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CheckoutRecoveryEmailStatusEnum, CheckoutRecoveryStatusEnum, OrderShippingMethodEnum, CheckoutStatusEnum } from "../types";
import { AbandonedCartFlowData } from "./AbandonedCartFlow";
import { OrderAdjustmentData } from "./OrderAdjustment";
import { AvailableShippingMethodData } from "./AvailableShippingMethod";
import { OrderAddressData } from "./OrderAddress";
import { CartData } from "./Cart";
import { CheckoutCustomerData } from "./CheckoutCustomer";
import { OrderGiftPackageLineData } from "./OrderGiftPackageLine";
import { OrderShippingLineData } from "./OrderShippingLine";
export declare class CheckoutData extends BaseModelData {
    abandonedCheckoutFlows: AbandonedCartFlowData[] | null;
    adjustments: OrderAdjustmentData[] | null;
    availableShippingMethods: AvailableShippingMethodData[] | null;
    billingAddress: OrderAddressData | null;
    cart: CartData | null;
    cartId: string;
    couponCode: string | null;
    customer: CheckoutCustomerData | null;
    giftPackageLines: OrderGiftPackageLineData[] | null;
    giftPackageNote: string | null;
    isGiftPackage: boolean | null;
    merchantId: string;
    note: string | null;
    orderId: string | null;
    orderNumber: string | null;
    orderedAt: any | null;
    recoverEmailStatus: CheckoutRecoveryEmailStatusEnum | null;
    recoveryStatus: CheckoutRecoveryStatusEnum | null;
    shippingAddress: OrderAddressData | null;
    shippingLines: OrderShippingLineData[] | null;
    shippingMethod: OrderShippingMethodEnum;
    shippingSettingsId: string | null;
    shippingZoneRateId: string | null;
    status: CheckoutStatusEnum;
    stockLocationId: string | null;
    totalFinalPrice: number;
    constructor(data?: Partial<CheckoutData>);
}
export declare class Checkout extends CheckoutData {
}
export declare type PartialCheckout = Partial<Checkout>;
export declare type ReadOnlyCheckout = DeepReadonly<Checkout>;
