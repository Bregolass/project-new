import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CategoryProductsOrderTypeEnum } from "../types";
import { CategoryPathItemData } from "./CategoryPathItem";
import { CategoryConditionData } from "./CategoryCondition";
import { HTMLMetaDataData } from "./HTMLMetaData";
import { CategoryTranslationData } from "./CategoryTranslation";
export declare class CategoryData extends BaseModelData {
    categoryPath: string[] | null;
    categoryPathItems: CategoryPathItemData[] | null;
    conditions: CategoryConditionData[] | null;
    description: string | null;
    imageId: string | null;
    isAutomated: boolean | null;
    metaData: HTMLMetaDataData | null;
    name: string;
    orderType: CategoryProductsOrderTypeEnum | null;
    parentId: string | null;
    salesChannelIds: string[] | null;
    shouldMatchAllConditions: boolean | null;
    translations: CategoryTranslationData[] | null;
    constructor(data?: Partial<CategoryData>);
}
export declare class Category extends CategoryData {
}
export declare type PartialCategory = Partial<Category>;
export declare type ReadOnlyCategory = DeepReadonly<Category>;
