import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CustomerAttributeValueData } from "./CustomerAttributeValue";
import { CustomerAddressCityData } from "./CustomerAddressCity";
import { CustomerAddressCountryData } from "./CustomerAddressCountry";
import { CustomerAddressDistrictData } from "./CustomerAddressDistrict";
import { CustomerAddressStateData } from "./CustomerAddressState";
export declare class CustomerAddressData extends BaseModelData {
    addressLine1: string;
    addressLine2: string | null;
    attributes: CustomerAttributeValueData[] | null;
    city: CustomerAddressCityData;
    company: string | null;
    country: CustomerAddressCountryData;
    district: CustomerAddressDistrictData | null;
    firstName: string;
    identityNumber: string | null;
    isDefault: boolean | null;
    lastName: string;
    phone: string | null;
    postalCode: string | null;
    state: CustomerAddressStateData | null;
    taxNumber: string | null;
    taxOffice: string | null;
    title: string;
    constructor(data?: Partial<CustomerAddressData>);
}
export declare class CustomerAddress extends CustomerAddressData {
}
export declare type PartialCustomerAddress = Partial<CustomerAddress>;
export declare type ReadOnlyCustomerAddress = DeepReadonly<CustomerAddress>;
