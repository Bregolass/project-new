import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CartCreatedByEnum, CartStatusEnum } from "../types";
import { CartCampaignOfferData } from "./CartCampaignOffer";
import { OrderLineItemData } from "./OrderLineItem";
import { CartStorefrontRoutingData } from "./CartStorefrontRouting";
import { OrderTaxLineData } from "./OrderTaxLine";
export declare class CartData extends BaseModelData {
    campaignOffers: CartCampaignOfferData[] | null;
    createdBy: CartCreatedByEnum | null;
    currencyCode: string | null;
    currencySymbol: string | null;
    customerId: string | null;
    dueDate: any;
    itemCount: number;
    items: OrderLineItemData[];
    merchantId: string;
    priceListId: string | null;
    salesChannelId: string;
    status: CartStatusEnum;
    storefrontId: string | null;
    storefrontRouting: CartStorefrontRoutingData | null;
    storefrontRoutingId: string | null;
    storefrontThemeId: string | null;
    taxLines: OrderTaxLineData[] | null;
    totalPrice: number;
    constructor(data?: Partial<CartData>);
}
export declare class Cart extends CartData {
}
export declare type PartialCart = Partial<Cart>;
export declare type ReadOnlyCart = DeepReadonly<Cart>;
