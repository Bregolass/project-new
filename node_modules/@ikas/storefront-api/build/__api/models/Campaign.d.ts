import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CampaignApplicablePriceEnum, CampaignCreatedForEnum, CampaignTypeEnum } from "../types";
import { BuyXThenGetYData } from "./BuyXThenGetY";
import { CampaignDateRangeFieldData } from "./CampaignDateRangeField";
import { FixedDiscountData } from "./FixedDiscount";
export declare class CampaignData extends BaseModelData {
    applicableCustomerGroupIds: string[] | null;
    applicableCustomerIds: string[] | null;
    applicablePrice: CampaignApplicablePriceEnum;
    buyXThenGetY: BuyXThenGetYData | null;
    canCombineWithOtherCampaigns: boolean;
    createdFor: CampaignCreatedForEnum | null;
    currencyCodes: string[] | null;
    dateRange: CampaignDateRangeFieldData | null;
    fixedDiscount: FixedDiscountData | null;
    hasCoupon: boolean;
    includeDiscountedProducts: boolean | null;
    isFreeShipping: boolean | null;
    onlyUseCustomer: boolean | null;
    salesChannelIds: string[] | null;
    title: string;
    type: CampaignTypeEnum;
    usageCount: number;
    usageLimit: number | null;
    usageLimitPerCustomer: number | null;
    constructor(data?: Partial<CampaignData>);
}
export declare class Campaign extends CampaignData {
}
export declare type PartialCampaign = Partial<Campaign>;
export declare type ReadOnlyCampaign = DeepReadonly<Campaign>;
