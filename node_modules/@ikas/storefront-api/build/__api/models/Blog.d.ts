import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { BlogContentData } from "./BlogContent";
import { BlogCategoryData } from "./BlogCategory";
import { BlogMetadataData } from "./BlogMetadata";
import { BlogTagData } from "./BlogTag";
import { BlogWriterData } from "./BlogWriter";
export declare class BlogData extends BaseModelData {
    blogContent: BlogContentData;
    category: BlogCategoryData;
    categoryId: string;
    imageId: string;
    isPublished: boolean;
    locale: string | null;
    metadata: BlogMetadataData;
    publishedAt: any | null;
    shortDescription: string;
    storefrontId: string;
    tagIds: string[] | null;
    tags: BlogTagData[] | null;
    title: string;
    writer: BlogWriterData;
    constructor(data?: Partial<BlogData>);
}
export declare class Blog extends BlogData {
}
export declare type PartialBlog = Partial<Blog>;
export declare type ReadOnlyBlog = DeepReadonly<Blog>;
