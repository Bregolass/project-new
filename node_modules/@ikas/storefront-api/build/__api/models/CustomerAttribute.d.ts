import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { CustomerAttributeTypeEnum } from "../types";
import { CustomerAttributeOptionData } from "./CustomerAttributeOption";
import { CustomerAttributeSalesChannelData } from "./CustomerAttributeSalesChannel";
import { CustomerAttributeTranslationData } from "./CustomerAttributeTranslation";
export declare class CustomerAttributeData extends BaseModelData {
    description: string | null;
    name: string;
    options: CustomerAttributeOptionData[] | null;
    order: number | null;
    salesChannels: CustomerAttributeSalesChannelData[] | null;
    translations: CustomerAttributeTranslationData[] | null;
    type: CustomerAttributeTypeEnum;
    constructor(data?: Partial<CustomerAttributeData>);
}
export declare class CustomerAttribute extends CustomerAttributeData {
}
export declare type PartialCustomerAttribute = Partial<CustomerAttribute>;
export declare type ReadOnlyCustomerAttribute = DeepReadonly<CustomerAttribute>;
