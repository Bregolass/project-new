import { DeepReadonly } from "ts-essentials";
import { SearchProductAttributeValueData } from "./SearchProductAttributeValue";
import { BundleSettingsModelData } from "./BundleSettingsModel";
import { SearchProductImageData } from "./SearchProductImage";
import { SearchProductPriceData } from "./SearchProductPrice";
import { SearchProductStockLocationData } from "./SearchProductStockLocation";
import { VariantUnitModelData } from "./VariantUnitModel";
import { SearchVariationValueRelationData } from "./SearchVariationValueRelation";
export declare class SearchVariantData {
    attributes: SearchProductAttributeValueData[] | null;
    barcodeList: string[] | null;
    bundleSettings: BundleSettingsModelData | null;
    deleted: boolean | null;
    id: string;
    images: SearchProductImageData[] | null;
    isActive: boolean | null;
    prices: SearchProductPriceData[] | null;
    sellIfOutOfStock: boolean | null;
    sku: string | null;
    stocks: SearchProductStockLocationData[] | null;
    unit: VariantUnitModelData | null;
    variantValues: SearchVariationValueRelationData[] | null;
    weight: number | null;
    constructor(data?: Partial<SearchVariantData>);
}
export declare class SearchVariant extends SearchVariantData {
}
export declare type PartialSearchVariant = Partial<SearchVariant>;
export declare type ReadOnlySearchVariant = DeepReadonly<SearchVariant>;
