import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { PaymentMethodTypeEnum, PaymentGatewayTypeEnum } from "../types";
import { AdditionalPriceData } from "./AdditionalPrice";
import { PaymentGatewayPaymentMethodData } from "./PaymentGatewayPaymentMethod";
import { PaymentGatewaySettingsData } from "./PaymentGatewaySettings";
import { PaymentGatewayTranslationData } from "./PaymentGatewayTranslation";
export declare class PaymentGatewayData extends BaseModelData {
    additionalPrices: AdditionalPriceData[] | null;
    availableCountries: string[] | null;
    code: string;
    description: string | null;
    isPassive: boolean | null;
    logoUrl: string | null;
    masterPassClientId: string | null;
    name: string;
    paymentGatewayProviderId: string | null;
    paymentMethodType: PaymentMethodTypeEnum;
    paymentMethods: PaymentGatewayPaymentMethodData[];
    settings: PaymentGatewaySettingsData[] | null;
    supportedCurrencies: string[] | null;
    testMode: boolean | null;
    translations: PaymentGatewayTranslationData[] | null;
    type: PaymentGatewayTypeEnum;
    constructor(data?: Partial<PaymentGatewayData>);
}
export declare class PaymentGateway extends PaymentGatewayData {
}
export declare type PartialPaymentGateway = Partial<PaymentGateway>;
export declare type ReadOnlyPaymentGateway = DeepReadonly<PaymentGateway>;
