import { DeepReadonly } from "ts-essentials";
import BaseModelData from "./_base";
import { PaymentMethodTypeEnum, TransactionStatusEnum, TransactionTypeEnum } from "../types";
import { TransactionErrorData } from "./TransactionError";
import { TransactionPaymentMethodDetailData } from "./TransactionPaymentMethodDetail";
export declare class StorefrontTransactionData extends BaseModelData {
    amount: number;
    checkoutId: string | null;
    currencyCode: string;
    currencySymbol: string | null;
    customerId: string | null;
    error: TransactionErrorData | null;
    orderId: string | null;
    paymentGatewayCode: string | null;
    paymentGatewayId: string;
    paymentGatewayName: string;
    paymentMethod: PaymentMethodTypeEnum | null;
    paymentMethodDetail: TransactionPaymentMethodDetailData | null;
    processedAt: any | null;
    refundReason: string | null;
    status: TransactionStatusEnum;
    type: TransactionTypeEnum;
    constructor(data?: Partial<StorefrontTransactionData>);
}
export declare class StorefrontTransaction extends StorefrontTransactionData {
}
export declare type PartialStorefrontTransaction = Partial<StorefrontTransaction>;
export declare type ReadOnlyStorefrontTransaction = DeepReadonly<StorefrontTransaction>;
