import { DeepReadonly } from "ts-essentials";
import { ProductFilterDisplayTypeEnum, ProductFilterTypeEnum } from "../types";
import { CategoryData } from "./Category";
import { ProductFilterSettingsData } from "./ProductFilterSettings";
import { ApplicableProductFilterValueData } from "./ApplicableProductFilterValue";
export declare class ProductFilterDataFilterData {
    categories: CategoryData[] | null;
    customValues: string[] | null;
    displayType: ProductFilterDisplayTypeEnum;
    id: string;
    isFacetFilter: boolean | null;
    isMultiSelect: boolean;
    key: string;
    name: string;
    order: number;
    settings: ProductFilterSettingsData | null;
    type: ProductFilterTypeEnum;
    values: ApplicableProductFilterValueData[] | null;
    constructor(data?: Partial<ProductFilterDataFilterData>);
}
export declare class ProductFilterDataFilter extends ProductFilterDataFilterData {
}
export declare type PartialProductFilterDataFilter = Partial<ProductFilterDataFilter>;
export declare type ReadOnlyProductFilterDataFilter = DeepReadonly<ProductFilterDataFilter>;
