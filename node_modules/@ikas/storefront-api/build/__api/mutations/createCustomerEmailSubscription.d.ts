import { ConfigType, APIResponse } from "@ikas/fe-api-client";
import { CreateCustomerEmailSubscriptionInput, Customer } from "../types";
declare const createCustomerEmailSubscription: (variables: QueryParams, fields?: string[], config?: ConfigType) => Promise<APIResponse<undefined> | APIResponse<Customer>>;
export default createCustomerEmailSubscription;
export declare type QueryParams = {
    input: CreateCustomerEmailSubscriptionInput;
};
export declare enum ResponseField {
    ACCOUNT_STATUS = "accountStatus",
    ACCOUNT_STATUS_UPDATED_AT = "accountStatusUpdatedAt",
    ADDRESSES__ADDRESS_LINE1 = "addresses.addressLine1",
    ADDRESSES__ADDRESS_LINE2 = "addresses.addressLine2",
    ADDRESSES__ATTRIBUTES__CUSTOMER_ATTRIBUTE_ID = "addresses.attributes.customerAttributeId",
    ADDRESSES__ATTRIBUTES__CUSTOMER_ATTRIBUTE_OPTION_ID = "addresses.attributes.customerAttributeOptionId",
    ADDRESSES__ATTRIBUTES__VALUE = "addresses.attributes.value",
    ADDRESSES__CITY__CODE = "addresses.city.code",
    ADDRESSES__CITY__ID = "addresses.city.id",
    ADDRESSES__CITY__NAME = "addresses.city.name",
    ADDRESSES__COMPANY = "addresses.company",
    ADDRESSES__COUNTRY__CODE = "addresses.country.code",
    ADDRESSES__COUNTRY__ID = "addresses.country.id",
    ADDRESSES__COUNTRY__ISO2 = "addresses.country.iso2",
    ADDRESSES__COUNTRY__ISO3 = "addresses.country.iso3",
    ADDRESSES__COUNTRY__NAME = "addresses.country.name",
    ADDRESSES__CREATED_AT = "addresses.createdAt",
    ADDRESSES__DELETED = "addresses.deleted",
    ADDRESSES__DISTRICT__CODE = "addresses.district.code",
    ADDRESSES__DISTRICT__ID = "addresses.district.id",
    ADDRESSES__DISTRICT__NAME = "addresses.district.name",
    ADDRESSES__FIRST_NAME = "addresses.firstName",
    ADDRESSES__ID = "addresses.id",
    ADDRESSES__IDENTITY_NUMBER = "addresses.identityNumber",
    ADDRESSES__IS_DEFAULT = "addresses.isDefault",
    ADDRESSES__LAST_NAME = "addresses.lastName",
    ADDRESSES__PHONE = "addresses.phone",
    ADDRESSES__POSTAL_CODE = "addresses.postalCode",
    ADDRESSES__STATE__CODE = "addresses.state.code",
    ADDRESSES__STATE__ID = "addresses.state.id",
    ADDRESSES__STATE__NAME = "addresses.state.name",
    ADDRESSES__TAX_NUMBER = "addresses.taxNumber",
    ADDRESSES__TAX_OFFICE = "addresses.taxOffice",
    ADDRESSES__TITLE = "addresses.title",
    ADDRESSES__UPDATED_AT = "addresses.updatedAt",
    ATTRIBUTES__CUSTOMER_ATTRIBUTE_ID = "attributes.customerAttributeId",
    ATTRIBUTES__CUSTOMER_ATTRIBUTE_OPTION_ID = "attributes.customerAttributeOptionId",
    ATTRIBUTES__VALUE = "attributes.value",
    CREATED_AT = "createdAt",
    CUSTOMER_GROUP_IDS = "customerGroupIds",
    CUSTOMER_SEQUENCE = "customerSequence",
    DELETED = "deleted",
    EMAIL = "email",
    EMAIL_VERIFIED_DATE = "emailVerifiedDate",
    FIRST_NAME = "firstName",
    FULL_NAME = "fullName",
    ID = "id",
    IS_EMAIL_VERIFIED = "isEmailVerified",
    IS_PHONE_VERIFIED = "isPhoneVerified",
    LAST_NAME = "lastName",
    NOTE = "note",
    ORDER_COUNT = "orderCount",
    PASSWORD_UPDATE_DATE = "passwordUpdateDate",
    PHONE = "phone",
    PHONE_VERIFIED_DATE = "phoneVerifiedDate",
    PREFERRED_LANGUAGE = "preferredLanguage",
    REGISTRATION_SOURCE = "registrationSource",
    SUBSCRIPTION_STATUS = "subscriptionStatus",
    SUBSCRIPTION_STATUS_UPDATED_AT = "subscriptionStatusUpdatedAt",
    TAG_IDS = "tagIds",
    UPDATED_AT = "updatedAt"
}
