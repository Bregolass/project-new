import { APIResponse } from "@ikas/fe-api-client";
import { QueryParams as CustomerLoginQueryParams } from "../../__api/mutations/customerLogin";
import { QueryParams as CustomerSocialLoginQueryParams } from "../../__api/queries/customerSocialLogin";
import { QueryParams as RegisterCustomerQueryParams } from "../../__api/mutations/registerCustomer";
import { QueryParams as CustomerRefreshTokenQueryParams } from "../../__api/mutations/customerRefreshToken";
import { QueryParams as CustomerForgotPasswordQueryParams } from "../../__api/mutations/customerForgotPassword";
import { QueryParams as CustomerRecoverPasswordQueryParams } from "../../__api/mutations/customerRecoverPassword";
import { QueryParams as CheckCustomerEmailQueryParams } from "../../__api/queries/checkCustomerEmail";
import { QueryParams as SaveMyCustomerQueryParams } from "../../__api/mutations/saveMyCustomer";
import { QueryParams as GetCustomerOrdersQueryParams } from "../../__api/queries/getCustomerOrders";
import { QueryParams as GetOrderByEmailQueryParams } from "../../__api/queries/getOrderByEmail";
import { QueryParams as ListOrderTransactionsQueryParams } from "../../__api/queries/listOrderTransactions";
import { QueryParams as CreateOrderRefundRequestQueryParams } from "../../__api/mutations/createOrderRefundRequest";
import { QueryParams as SubscribeToMarketingNotificationsQueryParams } from "../../__api/mutations/subscribeToMarketingNotifications";
import { QueryParams as GetLastViewedProductsQueryParams } from "../../__api/queries/getLastViewedProducts";
import { QueryParams as SaveLastViewedProductsQueryParams } from "../../__api/mutations/saveLastViewedProducts";
import { QueryParams as ListOrderRefundSettingsQueryParams } from "../../__api/queries/listOrderRefundSettings";
import { QueryParams as SendContactFormToMerchantQueryParams } from "../../__api/mutations/sendContactFormToMerchant";
import { QueryParams as SaveFavoriteProductQueryParams } from "../../__api/mutations/saveFavoriteProduct";
import { QueryParams as IsFavoriteProductQueryParams } from "../../__api/queries/isFavoriteProduct";
import { QueryParams as CreateCustomerReviewQueryParams } from "../../__api/mutations/createCustomerReview";
import { QueryParams as ListCustomerReviewsQueryParams } from "../../__api/queries/listCustomerReviews";
import { QueryParams as ListCustomerReviewSummaryQueryParams } from "../../__api/queries/listCustomerReviewSummary";
import { QueryParams as ListCustomerSettingsQueryParams } from "../../__api/queries/listCustomerSettings";
import { QueryParams as ActivateCustomerQueryParams } from "../../__api/mutations/activateCustomer";
import { QueryParams as ResendCustomerActivationMailQueryParams } from "../../__api/mutations/resendCustomerActivationMail";
import { CustomerAttributeValueInput } from "../../__api/types";
import { IkasCustomer, IkasCustomerAttribute, IkasCustomerReview, IkasCustomerReviewSummary, IkasFavoriteProduct, IkasLastViewedProduct, IkasOrder, IkasOrderRefundSettings, IkasOrderTransaction, IkasCustomerSettings } from "@ikas/storefront-models";
export type { CustomerLoginQueryParams, CustomerSocialLoginQueryParams, RegisterCustomerQueryParams, CustomerRefreshTokenQueryParams, CustomerForgotPasswordQueryParams, CustomerRecoverPasswordQueryParams, CheckCustomerEmailQueryParams, SaveMyCustomerQueryParams, GetCustomerOrdersQueryParams, GetOrderByEmailQueryParams, ListOrderTransactionsQueryParams, CreateOrderRefundRequestQueryParams, SubscribeToMarketingNotificationsQueryParams, GetLastViewedProductsQueryParams, SaveLastViewedProductsQueryParams, ListOrderRefundSettingsQueryParams, SendContactFormToMerchantQueryParams, SaveFavoriteProductQueryParams, IsFavoriteProductQueryParams, CreateCustomerReviewQueryParams, ListCustomerReviewsQueryParams, ListCustomerReviewSummaryQueryParams, CustomerAttributeValueInput, ActivateCustomerQueryParams, ResendCustomerActivationMailQueryParams, };
export declare enum IkasRegisterError {
    EMAIL_IS_NOT_VERIFIED = "EMAIL_IS_NOT_VERIFIED",
    CUSTOMER_EMAIL_ALREADY_EXISTS = "CUSTOMER_EMAIL_ALREADY_EXISTS",
    UNKOWN = "UNKOWN"
}
export declare function login(params: CustomerLoginQueryParams): Promise<APIResponse<{
    customer: IkasCustomer | null;
    token: string;
    tokenExpiry: number;
} | null>>;
export declare function socialLogin(params: CustomerSocialLoginQueryParams): Promise<APIResponse<{
    customer: IkasCustomer | null;
    token: string;
    tokenExpiry: number;
} | null>>;
export declare function register(params: RegisterCustomerQueryParams): Promise<APIResponse<{
    customer: IkasCustomer | null;
    token: string;
    tokenExpiry: number;
} | null>>;
export declare function refreshToken(params: CustomerRefreshTokenQueryParams): Promise<APIResponse<undefined> | APIResponse<import("../../__api/types").CustomerRefreshTokenResponse>>;
export declare function forgotPassword(params: CustomerForgotPasswordQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function recoverPassword(params: CustomerRecoverPasswordQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function checkEmail(params: CheckCustomerEmailQueryParams): Promise<APIResponse<undefined> | APIResponse<import("../../__api/types").CustomerCheckResponse>>;
export declare function getCustomer(): Promise<APIResponse<{
    customer: IkasCustomer | null;
    accountStatus: import("../../__api/types").CustomerAccountStatusEnum | null;
    accountStatusUpdatedAt: any;
    addresses: import("../../__api/types").CustomerAddress[] | null;
    attributes: import("../../__api/types").CustomerAttributeValue[] | null;
    createdAt: any;
    customerGroupIds: string[] | null;
    customerSequence: number | null;
    deleted: boolean | null;
    email: string | null;
    emailVerifiedDate: any;
    firstName: string;
    fullName: string | null;
    id: string;
    isEmailVerified: boolean | null;
    isPhoneVerified: boolean | null;
    lastName: string | null;
    note: string | null;
    orderCount: number | null;
    passwordUpdateDate: any;
    phone: string | null;
    phoneVerifiedDate: any;
    preferredLanguage: string | null;
    registrationSource: import("../../__api/types").CustomerRegistrationSourceEnum | null;
    subscriptionStatus: import("../../__api/types").CustomerEmailSubscriptionStatusesEnum | null;
    subscriptionStatusUpdatedAt: any;
    tagIds: string[] | null;
    updatedAt: any;
} | null>>;
export declare function saveCustomer(params: SaveMyCustomerQueryParams): Promise<APIResponse<{
    customer: IkasCustomer | null;
    accountStatus: import("../../__api/types").CustomerAccountStatusEnum | null;
    accountStatusUpdatedAt: any;
    addresses: import("../../__api/types").CustomerAddress[] | null;
    attributes: import("../../__api/types").CustomerAttributeValue[] | null;
    createdAt: any;
    customerGroupIds: string[] | null;
    customerSequence: number | null;
    deleted: boolean | null;
    email: string | null;
    emailVerifiedDate: any;
    firstName: string;
    fullName: string | null;
    id: string;
    isEmailVerified: boolean | null;
    isPhoneVerified: boolean | null;
    lastName: string | null;
    note: string | null;
    orderCount: number | null;
    passwordUpdateDate: any;
    phone: string | null;
    phoneVerifiedDate: any;
    preferredLanguage: string | null;
    registrationSource: import("../../__api/types").CustomerRegistrationSourceEnum | null;
    subscriptionStatus: import("../../__api/types").CustomerEmailSubscriptionStatusesEnum | null;
    subscriptionStatusUpdatedAt: any;
    tagIds: string[] | null;
    updatedAt: any;
} | null>>;
export declare function getOrders(params: GetCustomerOrdersQueryParams): Promise<APIResponse<IkasOrder[]>>;
export declare function getOrderByEmail(params: GetOrderByEmailQueryParams): Promise<APIResponse<IkasOrder>>;
export declare function listOrderTransactions(params: ListOrderTransactionsQueryParams): Promise<APIResponse<IkasOrderTransaction[]>>;
export declare function createOrderRefundRequest(params: CreateOrderRefundRequestQueryParams): Promise<APIResponse<IkasOrder | null>>;
export declare function subscribeToMarketingNotifications(params: SubscribeToMarketingNotificationsQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function getLastViewedProducts(params: GetLastViewedProductsQueryParams): Promise<APIResponse<IkasLastViewedProduct[]>>;
export declare function saveLastViewedProducts(params: SaveLastViewedProductsQueryParams): Promise<APIResponse<undefined> | APIResponse<import("../../__api/types").ProductLastViewed>>;
export declare function listOrderRefundSettings(params: ListOrderRefundSettingsQueryParams): Promise<APIResponse<IkasOrderRefundSettings[] | null>>;
export declare function sendContactFormToMerchant(params: SendContactFormToMerchantQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function listFavoriteProducts(): Promise<APIResponse<IkasFavoriteProduct[] | null>>;
export declare function saveFavoriteProduct(params: SaveFavoriteProductQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function isFavoriteProduct(params: IsFavoriteProductQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
export declare function createCustomerReview(params: CreateCustomerReviewQueryParams): Promise<APIResponse<IkasCustomerReview>>;
export declare function listCustomerReviews(params: ListCustomerReviewsQueryParams): Promise<APIResponse<{
    data: IkasCustomerReview[];
    count: number;
    hasNext: boolean;
    limit: number;
    page: number;
} | null>>;
export declare function listCustomerReviewSummary(params: ListCustomerReviewSummaryQueryParams): Promise<APIResponse<{
    data: IkasCustomerReviewSummary[];
    count?: number | undefined;
    hasNext?: boolean | undefined;
    limit?: number | undefined;
    page?: number | undefined;
}>>;
export declare function listCustomerAttribute(): Promise<APIResponse<IkasCustomerAttribute[]>>;
export declare function listCustomerSettings(params: ListCustomerSettingsQueryParams): Promise<APIResponse<{
    data: IkasCustomerSettings[];
    length?: number | undefined;
    toString?: (() => string) | undefined;
    toLocaleString?: (() => string) | undefined;
    pop?: (() => import("../../__api/types").CustomerSettings | undefined) | undefined;
    push?: ((...items: import("../../__api/types").CustomerSettings[]) => number) | undefined;
    concat?: {
        (...items: ConcatArray<import("../../__api/types").CustomerSettings>[]): import("../../__api/types").CustomerSettings[];
        (...items: (import("../../__api/types").CustomerSettings | ConcatArray<import("../../__api/types").CustomerSettings>)[]): import("../../__api/types").CustomerSettings[];
    } | undefined;
    join?: ((separator?: string | undefined) => string) | undefined;
    reverse?: (() => import("../../__api/types").CustomerSettings[]) | undefined;
    shift?: (() => import("../../__api/types").CustomerSettings | undefined) | undefined;
    slice?: ((start?: number | undefined, end?: number | undefined) => import("../../__api/types").CustomerSettings[]) | undefined;
    sort?: ((compareFn?: ((a: import("../../__api/types").CustomerSettings, b: import("../../__api/types").CustomerSettings) => number) | undefined) => import("../../__api/types").CustomerSettings[]) | undefined;
    splice?: {
        (start: number, deleteCount?: number | undefined): import("../../__api/types").CustomerSettings[];
        (start: number, deleteCount: number, ...items: import("../../__api/types").CustomerSettings[]): import("../../__api/types").CustomerSettings[];
    } | undefined;
    unshift?: ((...items: import("../../__api/types").CustomerSettings[]) => number) | undefined;
    indexOf?: ((searchElement: import("../../__api/types").CustomerSettings, fromIndex?: number | undefined) => number) | undefined;
    lastIndexOf?: ((searchElement: import("../../__api/types").CustomerSettings, fromIndex?: number | undefined) => number) | undefined;
    every?: {
        <S extends import("../../__api/types").CustomerSettings>(predicate: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => value is S, thisArg?: any): this is S[];
        (predicate: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => unknown, thisArg?: any): boolean;
    } | undefined;
    some?: ((predicate: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => unknown, thisArg?: any) => boolean) | undefined;
    forEach?: ((callbackfn: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => void, thisArg?: any) => void) | undefined;
    map?: (<U>(callbackfn: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => U, thisArg?: any) => U[]) | undefined;
    filter?: {
        <S_1 extends import("../../__api/types").CustomerSettings>(predicate: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => value is S_1, thisArg?: any): S_1[];
        (predicate: (value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => unknown, thisArg?: any): import("../../__api/types").CustomerSettings[];
    } | undefined;
    reduce?: {
        (callbackfn: (previousValue: import("../../__api/types").CustomerSettings, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => import("../../__api/types").CustomerSettings): import("../../__api/types").CustomerSettings;
        (callbackfn: (previousValue: import("../../__api/types").CustomerSettings, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => import("../../__api/types").CustomerSettings, initialValue: import("../../__api/types").CustomerSettings): import("../../__api/types").CustomerSettings;
        <U_1>(callbackfn: (previousValue: U_1, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => U_1, initialValue: U_1): U_1;
    } | undefined;
    reduceRight?: {
        (callbackfn: (previousValue: import("../../__api/types").CustomerSettings, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => import("../../__api/types").CustomerSettings): import("../../__api/types").CustomerSettings;
        (callbackfn: (previousValue: import("../../__api/types").CustomerSettings, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => import("../../__api/types").CustomerSettings, initialValue: import("../../__api/types").CustomerSettings): import("../../__api/types").CustomerSettings;
        <U_2>(callbackfn: (previousValue: U_2, currentValue: import("../../__api/types").CustomerSettings, currentIndex: number, array: import("../../__api/types").CustomerSettings[]) => U_2, initialValue: U_2): U_2;
    } | undefined;
    find?: {
        <S_2 extends import("../../__api/types").CustomerSettings>(predicate: (this: void, value: import("../../__api/types").CustomerSettings, index: number, obj: import("../../__api/types").CustomerSettings[]) => value is S_2, thisArg?: any): S_2 | undefined;
        (predicate: (value: import("../../__api/types").CustomerSettings, index: number, obj: import("../../__api/types").CustomerSettings[]) => unknown, thisArg?: any): import("../../__api/types").CustomerSettings | undefined;
    } | undefined;
    findIndex?: ((predicate: (value: import("../../__api/types").CustomerSettings, index: number, obj: import("../../__api/types").CustomerSettings[]) => unknown, thisArg?: any) => number) | undefined;
    fill?: ((value: import("../../__api/types").CustomerSettings, start?: number | undefined, end?: number | undefined) => import("../../__api/types").CustomerSettings[]) | undefined;
    copyWithin?: ((target: number, start: number, end?: number | undefined) => import("../../__api/types").CustomerSettings[]) | undefined;
    entries?: (() => IterableIterator<[number, import("../../__api/types").CustomerSettings]>) | undefined;
    keys?: (() => IterableIterator<number>) | undefined;
    values?: (() => IterableIterator<import("../../__api/types").CustomerSettings>) | undefined;
    includes?: ((searchElement: import("../../__api/types").CustomerSettings, fromIndex?: number | undefined) => boolean) | undefined;
    flatMap?: (<U_3, This = undefined>(callback: (this: This, value: import("../../__api/types").CustomerSettings, index: number, array: import("../../__api/types").CustomerSettings[]) => U_3 | readonly U_3[], thisArg?: This | undefined) => U_3[]) | undefined;
    flat?: (<A, D extends number = 1>(this: A, depth?: D | undefined) => FlatArray<A, D>[]) | undefined;
    [Symbol.iterator]?: (() => IterableIterator<import("../../__api/types").CustomerSettings>) | undefined;
    [Symbol.unscopables]?: (() => {
        copyWithin: boolean;
        entries: boolean;
        fill: boolean;
        find: boolean;
        findIndex: boolean;
        keys: boolean;
        values: boolean;
    }) | undefined;
    at?: ((index: number) => import("../../__api/types").CustomerSettings | undefined) | undefined;
}>>;
export declare function activateCustomer(params: ActivateCustomerQueryParams): Promise<APIResponse<undefined> | APIResponse<string>>;
export declare function resendCustomerActivationMail(params: ResendCustomerActivationMailQueryParams): Promise<APIResponse<undefined> | APIResponse<boolean>>;
