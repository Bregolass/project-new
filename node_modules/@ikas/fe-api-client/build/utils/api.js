import{format as r}from'../ext/@redtea/format-axios-error/index.mjs.js';var e;!function(r){r.ARGUMENT_VALIDATION_ERROR="ARGUMENT_VALIDATION_ERROR",r.UNAUTHENTICATED="UNAUTHENTICATED",r.UNAUTHORIZED="UNAUTHORIZED",r.INTERNAL_SERVER_ERROR="INTERNAL_SERVER_ERROR",r.LOGIN_REQUIRED="LOGIN_REQUIRED",r.NETWORK_ERROR="NETWORK_ERROR",r.DUPLICATE_KEY_ERROR="DUPLICATE_KEY_ERROR",r.UNKNOWN="UNKNOWN"}(e||(e={}));var o=function(){function r(r,o){this.errors=[],this.errorCodes=[];var n=[],t=[];null==o||o.forEach((function(r){var o;(null===(o=r.extensions)||void 0===o?void 0:o.code)?(n.push(r.message),t.push(r.extensions.code)):(n.push("Unknown error"),t.push(e.UNKNOWN))})),this.graphQLErrors=o,this.errors=n,this.errorCodes=t,this.data=r}return Object.defineProperty(r.prototype,"firstErrorMessage",{get:function(){return this.errors.length?this.errors[0]:""},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"isUnAuthenticated",{get:function(){return this.errorCodes.some((function(r){return r===e.UNAUTHENTICATED}))},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"isNetworkError",{get:function(){return this.errorCodes.some((function(r){return r===e.NETWORK_ERROR}))},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"isSuccess",{get:function(){return 0===this.errorCodes.length},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"isRecoverableError",{get:function(){var r=[e.UNAUTHENTICATED,e.INTERNAL_SERVER_ERROR,e.NETWORK_ERROR];return this.errorCodes.every((function(e){return r.includes(e)}))},enumerable:!1,configurable:!0}),r.networkError=function(){var o=new r;return o.errors.push("Network error!"),o.errorCodes.push(e.NETWORK_ERROR),o},r.unknownError=function(){var o=new r;return o.errors.push("Unknown error!"),o.errorCodes.push(e.UNKNOWN),o},r.authError=function(){var o=new r;return o.errors.push("Authentication error!"),o.errorCodes.push(e.UNAUTHENTICATED),o},r.success=function(){return new r},r}();function n(e){try{console.log(JSON.stringify(r(e),null,2))}catch(r){console.error(e)}return e.networkError?o.networkError():e.graphQLErrors?new o(void 0,e.graphQLErrors):o.unknownError()}export{e as APIErrorCode,o as APIResponse,n as handleAPIError};
