import { IkasCustomerAddress } from "./address";
import { IkasCustomerAttributeValue } from "./attribute/value";
import { IkasBaseModel } from "../base";
import { IkasCustomerAccountStatus, IkasCustomerEmailSubscriptionStatus, IkasCustomerRegistrationSource, IkasCustomer as ICustomer } from "@ikas/storefront-models";
export declare class IkasCustomer extends IkasBaseModel implements ICustomer {
    accountStatusUpdatedAt: number | null;
    customerGroupIds: string[] | null;
    customerSequence: number | null;
    email: string | null;
    emailVerifiedDate: number | null;
    firstName: string;
    fullName: string | null;
    isEmailVerified: boolean | null;
    isPhoneVerified: boolean | null;
    lastName: string | null;
    note: string | null;
    orderCount: number | null;
    passwordUpdateDate: number | null;
    phone: string | null;
    phoneVerifiedDate: number | null;
    subscriptionStatusUpdatedAt: number | null;
    tagIds: string[] | null;
    registrationSource: IkasCustomerRegistrationSource | null;
    accountStatus: IkasCustomerAccountStatus | null;
    addresses: IkasCustomerAddress[] | null;
    subscriptionStatus: IkasCustomerEmailSubscriptionStatus | null;
    attributes: IkasCustomerAttributeValue[] | null;
    constructor(data: ICustomer);
    get isSubscribed(): boolean;
    get basicInfo(): {
        id: string;
        firstName: string;
        lastName: string | null;
        email: string | null;
        phone: string | null;
    };
}
export { IkasCustomerAccountStatus, IkasCustomerEmailSubscriptionStatus, IkasCustomerRegistrationSource, };
