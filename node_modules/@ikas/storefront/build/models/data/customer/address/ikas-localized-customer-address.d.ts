import { IkasCustomerAddress } from ".";
import { IkasCustomerAddress as ICustomerAddress } from "@ikas/storefront-models";
import { LocalizedAddressModel, AddressFormField, ErrorType, IkasAddressFormLabels, AddressFormItem } from "@ikas/localized-address";
declare type IkasLocalizedCustomerAddressConstructorData = {
    countrySettings?: LocalizedAddressModel | null;
} & ICustomerAddress;
export declare class IkasLocalizedCustomerAddress extends IkasCustomerAddress {
    countrySettings: LocalizedAddressModel | null;
    constructor(data?: Partial<IkasLocalizedCustomerAddressConstructorData>);
    get fieldSettings(): {
        firstName: AddressFormField;
        lastName: AddressFormField;
        identityNumber: AddressFormField;
        addressLine1: AddressFormField;
        addressLine2: AddressFormField;
        postalCode: AddressFormField;
        country: AddressFormField;
        state: AddressFormField;
        city: AddressFormField;
        district: AddressFormField;
        phone: AddressFormField;
        company: AddressFormField;
        taxOffice: AddressFormField;
        taxNumber: AddressFormField;
        title: AddressFormField;
    } | undefined;
    get addressFormat(): AddressFormItem[][] | undefined;
    get addressFormatIgnoreCountry(): AddressFormItem[][] | undefined;
    get billingFormat(): import("@ikas/localized-address").BillingFormItem[][] | undefined;
    get countryCode(): string;
    get validationResults(): {
        firstName: ErrorType;
        lastName: ErrorType;
        identityNumber: ErrorType;
        addressLine1: ErrorType;
        addressLine2: ErrorType;
        postalCode: ErrorType;
        country: ErrorType;
        state: ErrorType;
        city: ErrorType;
        district: ErrorType;
        phone: ErrorType;
        company: ErrorType;
        taxOffice: ErrorType;
        taxNumber: ErrorType;
        title: ErrorType;
    } | undefined;
    get isValidAddress(): boolean | undefined;
    get fieldLabels(): IkasAddressFormLabels | undefined;
    get isFreeTextCity(): boolean | undefined;
    get isFreeTextDistrict(): boolean | undefined;
    private get invisibleFields();
    private get customAddressFormSettings();
}
export {};
