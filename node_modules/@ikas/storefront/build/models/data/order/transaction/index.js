export{IkasTransactionStatus,IkasTransactionType}from"@ikas/storefront-models";import{makeAutoObservable as t}from"mobx";import{formatCurrency as e}from"../../../../utils/currency.js";import{IkasTransactionError as r}from"./error/index.js";var o=function(){function o(e){this.amount=e.amount||null,this.checkoutId=e.checkoutId||null,this.createdAt=e.createdAt||null,this.currencyCode=e.currencyCode||null,this.currencySymbol=e.currencySymbol||null,this.customerId=e.customerId||null,this.error=e.error?new r(e.error):null,this.id=e.id,this.orderId=e.orderId,this.paymentGatewayId=e.paymentGatewayId,this.paymentGatewayName=e.paymentGatewayName,this.paymentMethod=e.paymentMethod,this.paymentMethodDetail=e.paymentMethodDetail,this.processedAt=e.processedAt,this.refundReason=e.refundReason,this.status=e.status,this.type=e.type,this.updatedAt=e.updatedAt,t(this)}return Object.defineProperty(o.prototype,"formattedAmount",{get:function(){return e(this.amount||0,this.currencyCode||"",this.currencySymbol||"")},enumerable:!1,configurable:!0}),o}();export{o as IkasOrderTransaction};
