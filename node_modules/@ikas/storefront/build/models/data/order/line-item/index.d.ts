import { IkasOrderLineItem as IOrderLineItem, IkasOrderLineItemStatus } from "@ikas/storefront-models";
import { IkasOrderLineDiscount } from "./discount";
import { IkasOrderLineVariant } from "./variant";
import { IkasOrderLineItemOption } from "./option";
import { IkasBaseModel } from "../../base";
declare type IOrderLineItemConstructorParams = {
    refundQuantity?: number;
} & IOrderLineItem;
export declare class IkasOrderLineItem extends IkasBaseModel implements IOrderLineItem {
    currencyCode: string | null;
    currencySymbol: string | null;
    discount: IkasOrderLineDiscount | null;
    discountPrice: number | null;
    finalPrice: number | null;
    finalUnitPrice: number | null;
    options: IkasOrderLineItemOption[] | null;
    originalOrderLineItemId: string | null;
    price: number;
    quantity: number;
    status: IkasOrderLineItemStatus;
    statusUpdatedAt: number | null;
    stockLocationId: string | null;
    taxValue: number | null;
    unitPrice: number | null;
    variant: IkasOrderLineVariant;
    orderedAt: number;
    private _refundQuantity;
    constructor(data: IOrderLineItemConstructorParams);
    get priceWithQuantity(): number;
    get formattedPriceWithQuantity(): string;
    get overridenPriceWithQuantity(): number;
    get formattedOverridenPriceWithQuantity(): string;
    get formattedFinalPrice(): string;
    get formattedUnitPrice(): string;
    get formattedFinalUnitPrice(): string;
    get unitPriceText(): string | undefined;
    get formattedDiscountPrice(): string;
    get finalPriceWithQuantity(): number;
    get formattedFinalPriceWithQuantity(): string;
    get tax(): number;
    get formattedTax(): string;
    get hasDiscount(): boolean;
    get refundQuantity(): number | null | undefined;
    set refundQuantity(value: number | null | undefined);
}
export { IkasOrderLineItemStatus };
