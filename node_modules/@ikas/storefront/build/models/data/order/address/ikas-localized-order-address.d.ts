import { IkasOrderAddress } from ".";
import { IkasOrderAddress as IOrderAddress } from "@ikas/storefront-models";
import { AddressFormItem, LocalizedAddressModel } from "@ikas/localized-address";
declare type IkasLocalizedOrderAddressConstructorData = {
    countrySettings?: LocalizedAddressModel | null;
} & IOrderAddress;
export default class IkasLocalizedOrderAddress extends IkasOrderAddress {
    countrySettings: LocalizedAddressModel | null;
    constructor(data?: Partial<IkasLocalizedOrderAddressConstructorData>);
    get fieldSettings(): {
        firstName: import("@ikas/localized-address").AddressFormField;
        lastName: import("@ikas/localized-address").AddressFormField;
        identityNumber: import("@ikas/localized-address").AddressFormField;
        addressLine1: import("@ikas/localized-address").AddressFormField;
        addressLine2: import("@ikas/localized-address").AddressFormField;
        postalCode: import("@ikas/localized-address").AddressFormField;
        country: import("@ikas/localized-address").AddressFormField;
        state: import("@ikas/localized-address").AddressFormField;
        city: import("@ikas/localized-address").AddressFormField;
        district: import("@ikas/localized-address").AddressFormField;
        phone: import("@ikas/localized-address").AddressFormField;
        company: import("@ikas/localized-address").AddressFormField;
        taxOffice: import("@ikas/localized-address").AddressFormField;
        taxNumber: import("@ikas/localized-address").AddressFormField;
    } | undefined;
    get addressFormat(): AddressFormItem[][] | undefined;
    get addressFormatIgnoreCountry(): AddressFormItem[][] | undefined;
    get billingFormat(): import("@ikas/localized-address").BillingFormItem[][] | undefined;
    get countryCode(): string;
    get validationResults(): {
        firstName: import("@ikas/localized-address").ErrorType;
        lastName: import("@ikas/localized-address").ErrorType;
        identityNumber: import("@ikas/localized-address").ErrorType;
        addressLine1: import("@ikas/localized-address").ErrorType;
        addressLine2: import("@ikas/localized-address").ErrorType;
        postalCode: import("@ikas/localized-address").ErrorType;
        country: import("@ikas/localized-address").ErrorType;
        state: import("@ikas/localized-address").ErrorType;
        city: import("@ikas/localized-address").ErrorType;
        district: import("@ikas/localized-address").ErrorType;
        phone: import("@ikas/localized-address").ErrorType;
        company: import("@ikas/localized-address").ErrorType;
        taxOffice: import("@ikas/localized-address").ErrorType;
        taxNumber: import("@ikas/localized-address").ErrorType;
    } | undefined;
    get isValidAddress(): boolean | undefined;
    get fieldLabels(): import("@ikas/localized-address").IkasAddressFormLabels | undefined;
    get isFreeTextCity(): boolean | undefined;
    get isFreeTextDistrict(): boolean | undefined;
    private get invisibleFields();
    private get customAddressFormSettings();
}
export {};
