import { IkasImage } from "../../image";
import { IkasProductAttribute } from "../attribute";
import { IkasProductAttributeOption } from "../attribute/option";
import { IkasProductAttributeValue as IProductAttributeValue, IkasAttributeTableCellValue as IAttributeTableCellValue, IkasProductAttributeMap as IProductAttributeMap } from "@ikas/storefront-models";
export declare class IkasProductAttributeValue implements IProductAttributeValue {
    imageIds: string[] | null;
    productAttributeId: string | null;
    productAttributeOptionId: string | null;
    value: string | null;
    images?: IkasImage[];
    productAttribute?: IkasProductAttribute | null;
    productAttributeOption?: IkasProductAttributeOption | null;
    constructor(data: IProductAttributeValue);
    get tableValue(): IAttributeTableCellValue[] | undefined;
    get productIds(): string[];
    getProducts(): Promise<import("..").IkasProduct[]>;
}
export declare class IkasAttributeTableCellValue implements IAttributeTableCellValue {
    colId: string;
    rowId: string;
    value: string | null;
    constructor(data: IAttributeTableCellValue);
}
export declare class IkasProductAttributeMap implements IProductAttributeMap {
    attribute: IkasProductAttribute;
    values: IkasProductAttributeValue[];
    constructor(data: IProductAttributeMap);
}
