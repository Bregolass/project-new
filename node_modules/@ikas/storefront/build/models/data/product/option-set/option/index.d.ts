import { IkasProductOptionSelectType, IkasProductOptionType, IkasProductOptionOtherPrice as IProductOptionOtherPrice, IkasProductOptionSelectValue as IProductOptionSelectValue, IkasProductOptionSelectSettings as IProductOptionSelectSettings, IkasProductOptionDateSettings as IProductOptionDateSettings, IkasProductOptionTextSettings as IProductOptionTextSettings, IkasProductOptionFileSettings as IProductOptionFileSettings, IkasProductOption as IProductOption } from "@ikas/storefront-models";
import { IkasImage } from "../../../image";
export declare class IkasProductOptionOtherPrice implements IProductOptionOtherPrice {
    currencyCode: string;
    price: number;
    constructor(data: IProductOptionOtherPrice);
}
export declare class IkasProductOptionSelectValue implements IProductOptionSelectValue {
    id: string;
    order: number;
    value: string;
    price: number | null;
    otherPrices: IkasProductOptionOtherPrice[] | null;
    thumbnailImageId: string | null;
    colorCode: string | null;
    thumbnailImage: IkasImage | null;
    constructor(data?: Partial<IProductOptionSelectValue>);
}
export declare class IkasProductOptionSelectSettings implements IProductOptionSelectSettings {
    type: IkasProductOptionSelectType;
    minSelect: number | null;
    maxSelect: number | null;
    values: IkasProductOptionSelectValue[];
    constructor(data?: Partial<IProductOptionSelectSettings>);
}
export declare class IkasProductOptionDateSettings implements IProductOptionDateSettings {
    min: Date | null;
    max: Date | null;
    minRelativeNextDate: number | null;
    maxRelativeNextDate: number | null;
    constructor(data: Partial<IProductOptionDateSettings>);
}
export declare class IkasProductOptionTextSettings implements IProductOptionTextSettings {
    min: number | null;
    max: number | null;
    constructor(data?: Partial<IProductOptionTextSettings>);
}
export declare class IkasProductOptionFileSettings {
    allowedExtensions: string[] | null;
    minQuantity: number | null;
    maxQuantity: number | null;
    constructor(data: Partial<IProductOptionFileSettings>);
}
export declare class IkasProductOption implements IProductOption {
    id: string;
    productOptionSetId: string;
    name: string;
    order: number;
    type: IkasProductOptionType;
    selectSettings: IkasProductOptionSelectSettings | null;
    textSettings: IkasProductOptionTextSettings | null;
    fileSettings: IkasProductOptionFileSettings | null;
    dateSettings: IkasProductOptionDateSettings | null;
    price: number | null;
    otherPrices: IkasProductOptionOtherPrice[] | null;
    isOptional: boolean;
    optionalText: string | null;
    requiredOptionId: string | null;
    requiredOptionValueIds: string[] | null;
    childOptions: IkasProductOption[];
    private pValues;
    constructor(data: Partial<IProductOption>);
    get displayedChildOptions(): IkasProductOption[];
    productOptionFileUpload: (files: File[]) => Promise<string[]>;
    get hasValidValues(): boolean;
    get values(): string[];
    set values(values: string[]);
    initValues: () => void;
}
export { IkasProductOptionSelectType, IkasProductOptionType };
