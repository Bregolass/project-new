import { IkasProductPrice } from "./price";
import { IkasVariantValue } from "../../variant-type/variant-value";
import { IkasProductAttributeMap, IkasProductAttributeValue } from "../attribute-value";
import { IkasProductCampaign } from "../campaign";
import { IkasProductImage } from "../image";
import { IkasProductVariant as IProductVariant } from "@ikas/storefront-models";
import { IkasProductVariantUnit } from "./unit";
export declare class IkasProductVariant implements IProductVariant {
    id: string;
    sku: string | null;
    barcodeList: string[] | null;
    variantValues: IkasVariantValue[];
    attributes: IkasProductAttributeValue[];
    price: IkasProductPrice;
    stock: number;
    isActive: boolean;
    productId: string;
    sellIfOutOfStock: boolean;
    images: IkasProductImage[] | null;
    campaigns?: IkasProductCampaign[];
    unit: IkasProductVariantUnit | null;
    private _backInStockReminderSaved;
    constructor(data?: Partial<IProductVariant>);
    get mainImage(): IkasProductImage | undefined;
    get hasStock(): boolean;
    get isBackInStockEnabled(): boolean;
    get isBackInStockCustomerLoginRequired(): boolean | null | undefined;
    get isBackInStockReminderSaved(): boolean;
    get groupedAttributeValues(): IkasProductAttributeMap[];
    saveBackInStockReminder(email: string): Promise<boolean>;
}
