import { IkasPaymentGatewayAdditionalPrice } from "./additional-price";
import { IkasBaseModel } from "../base";
import { IkasPaymentGatewayTranslation } from "./translation";
import { IkasPaymentGatewaySettings } from "./settings";
import { IkasPaymentGatewayType, IkasPaymentMethod, IkasPaymentMethodType, IkasPaymentGateway as IPaymentGateway } from "@ikas/storefront-models";
import { IkasOrderShippingLine } from "../order/shipping-line";
export declare class IkasPaymentGateway extends IkasBaseModel implements IPaymentGateway {
    additionalPrices: IkasPaymentGatewayAdditionalPrice[] | null;
    availableCountries: string[] | null;
    code: string;
    description: string | null;
    logoUrl: string | null;
    masterPassClientId: string | null;
    name: string;
    paymentGatewayProviderId: string | null;
    supportedCurrencies: string[] | null;
    testMode: boolean | null;
    type: IkasPaymentGatewayType;
    paymentMethods: IkasPaymentMethod[];
    paymentMethodType: IkasPaymentMethodType;
    settings?: IkasPaymentGatewaySettings[] | null;
    translations?: IkasPaymentGatewayTranslation[] | null;
    constructor(data: IPaymentGateway);
    getCalculatedAdditionalPrices: (totalFinalPrice: number, shippingLines: IkasOrderShippingLine[] | null) => {
        name: string;
        amount: number;
        type: import("@ikas/storefront-models").IkasPaymentGatewayAdditionalPriceType;
    }[] | undefined;
}
export { IkasPaymentGatewayType, IkasPaymentMethodType };
export type { IkasPaymentMethod };
