declare type RecoverPasswordFormProps<T> = {
    message: {
        requiredRule: ((model: T) => string) | string;
        minRule: ((model: T) => string) | string;
        equalsRule: ((model: T) => string) | string;
    };
};
declare type RecoverPasswordFormModel = {
    password: string;
    passwordAgain: string;
};
export declare class RecoverPasswordForm {
    private model;
    private validator;
    constructor(props: RecoverPasswordFormProps<RecoverPasswordFormModel>);
    resetModel(): void;
    get password(): string;
    set password(value: string);
    get passwordAgain(): string;
    set passwordAgain(value: string);
    get hasError(): boolean;
    get passwordErrorMessage(): string | undefined;
    get passwordAgainErrorMessage(): string | undefined;
    get redirect(): string | null | undefined;
    onPasswordChange: (value: string) => void;
    onPasswordAgainChange: (value: string) => void;
    validateAll(): Promise<boolean>;
    submit(): Promise<{
        isFormError: boolean;
        isSuccess: boolean;
    }>;
}
export {};
