import { PhoneRule, RequiredRule } from "../rules";
import { IkasCustomer } from "../../../data";
declare type AccountInfoFormPropsValidatorMessage<T> = {
    requiredRule: ((model: T) => string) | string;
    phoneRule?: ((model: T) => string) | string;
};
declare type AccountInfoFormProps<T> = {
    message: AccountInfoFormPropsValidatorMessage<T>;
    customer: IkasCustomer;
};
export declare class AccountInfoForm {
    private customer;
    private validator;
    private message;
    constructor(props: AccountInfoFormProps<IkasCustomer>);
    validatorRules: (includePhoneRule?: boolean) => (RequiredRule<IkasCustomer> | PhoneRule<IkasCustomer>)[];
    get hasError(): boolean;
    get email(): string | null;
    get firstName(): string;
    set firstName(value: string);
    get lastName(): string;
    set lastName(value: string);
    get phone(): string;
    set phone(value: string);
    get isMarketingAccepted(): boolean;
    set isMarketingAccepted(value: boolean);
    get firstNameErrorMessage(): string | undefined;
    get lastNameErrorMessage(): string | undefined;
    get phoneErrorMessage(): string | undefined;
    onFirstNameChange: (value: string) => void;
    onLastNameChange: (value: string) => void;
    onPhoneChange: (value: string) => void;
    validateAll(): Promise<boolean>;
    submit(): Promise<{
        isFormError: boolean;
        isSuccess: boolean;
    }>;
}
export {};
