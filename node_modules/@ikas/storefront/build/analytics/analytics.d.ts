import { IkasProduct, IkasOrderLineItem, IkasCategory, IkasThemeJsonPageType, IkasOrderTransaction, IkasBrand, IkasCustomer, IkasCheckout, IkasContactForm } from "../models";
import { CheckoutStep } from "../components/checkout/model";
import { IkasCart } from "../models/data/cart";
import { IkasEventSubscriber } from "./events";
export declare class Analytics {
    static subscribers: IkasEventSubscriber[];
    constructor();
    static getCustomerInfo(): Promise<{
        consentGranted: boolean;
        id: string;
        firstName: string;
        lastName: string | null;
        email: string | null;
        phone: string | null;
    } | null>;
    static pageView(pageType: IkasThemeJsonPageType): Promise<void>;
    static productView(productDetail: IkasProduct): void;
    static addToCart(item: IkasOrderLineItem, quantity: number, eventId: string, cart: IkasCart): void;
    static removeFromCart(item: IkasProduct | IkasOrderLineItem, quantity: number, cart: IkasCart): void;
    static beginCheckout(checkout: IkasCheckout): void;
    static purchase(checkout: IkasCheckout, transaction: IkasOrderTransaction): void;
    static checkoutStep(checkout: IkasCheckout, step: CheckoutStep): void;
    static disableHTML(): void;
    static addToWishlist(productId: string): void;
    static search(searchKeyword: string): void;
    static completeRegistration(customer: IkasCustomer): void;
    static createEmailSubscripition(email: string): void;
    static customerLogin(): Promise<void>;
    static customerLogout(): Promise<void>;
    static customerVisit(): Promise<void>;
    static viewCart(cart: IkasCart | null | undefined): void;
    static viewCategory(categoryPath: string, category: IkasCategory): void;
    static viewBrand(brand: IkasBrand): void;
    static viewSearchResults(searchKeyword: string, productDetails: IkasProduct[]): void;
    static viewListing(productDetails: IkasProduct[]): void;
    static contactForm(form: IkasContactForm): void;
}
