/// <reference types="react" />
export default class FormItemViewModel implements Props {
    type: FormItemType;
    inputType?: FormItemInputType;
    inputMode?: FormItemInputMode;
    options?: FormItemSelectOption[];
    label: string;
    value?: string;
    hasError?: boolean;
    errorText?: string;
    tooltipText?: string;
    country?: string | null;
    textAreaPlaceholder?: string | null;
    rightContent?: React.ReactElement | null;
    disableResize?: boolean;
    disabled: boolean;
    onChange: (value: string) => void;
    constructor(props: Props);
    get formItemStyle(): string;
    get labelStyle(): string;
    get inputStyle(): string;
    onValueChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onTextAreaValueChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;
    onSelectChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;
    onPhoneChange: (value: string) => void;
    onCountryChange: (value: string | undefined) => void;
}
export interface Props {
    type: FormItemType;
    inputType?: FormItemInputType;
    inputMode?: FormItemInputMode;
    options?: FormItemSelectOption[];
    label: string;
    value?: string;
    hasError?: boolean;
    errorText?: string;
    name?: string;
    autocomplete?: string;
    required?: boolean;
    pattern?: string;
    tooltipText?: string;
    country?: string | null;
    currentCountryCode?: string | null;
    style?: React.CSSProperties;
    textAreaPlaceholder?: string | null;
    rightContent?: React.ReactElement | null;
    disableResize?: boolean;
    disabled?: boolean;
    onChange: (value: string) => void;
}
export declare enum FormItemType {
    TEXT = 0,
    TEXT_AREA = 1,
    SELECT = 2,
    TEL = 3
}
export declare type FormItemSelectOption = {
    value: string;
    label: string;
};
export declare enum FormItemInputType {
    TEXT = "text",
    PASSWORD = "password"
}
export declare enum FormItemInputMode {
    NUMERIC = "numeric",
    TEL = "tel",
    EMAIL = "email"
}
