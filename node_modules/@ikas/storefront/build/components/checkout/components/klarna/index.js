import*as n from"react";import{observer as e}from"mobx-react-lite";import t from"next/script";import"@ikas/storefront-config";import{useTranslation as a}from"../../../../utils/i18n.js";var r=e((function(e){var r=e.vm;return a().t,n.useEffect((function(){window.handleKlarna=function(n){var e;n&&(r.isStepLoading=!0,fetch((null===(e=r.klarnaResponse)||void 0===e?void 0:e.authorizeUrl)+"&data="+n).then((function(n){return n.json()})).then((function(n){window.location.href=n.redirectUrl})).catch((function(n){r.isStepLoading=!1})))}}),[]),r.klarnaResponse?n.createElement(n.Fragment,null,n.createElement("div",{id:"klarna-payments-container"}),n.createElement(t,{dangerouslySetInnerHTML:{__html:'window.klarnaAsyncCallback = function () {\n          try {\n            Klarna.Payments.init({\n              client_token: "'.concat(r.klarnaResponse.clientToken,'",\n            });\n            Klarna.Payments.load({\n                container: "#klarna-payments-container",\n              },\n              function (res) {\n              }\n            );\n          } catch (e) {\n            console.log("error", e);\n          }\n        };')}}),n.createElement(t,{dangerouslySetInnerHTML:{__html:"".concat(r.isKlarnaPaymentCompleted&&"Klarna.Payments.authorize({ auto_finalize: true }, function (res) {\n                  if (res.approved && !!res.authorization_token) {\n                    window.handleKlarna(JSON.stringify(res))\n                  } else{\n                    ".concat(setTimeout((function(){r.setIsKlarnaPaymentCompleted(!1)}),2e3),"\n                  }\n                });"))}}),n.createElement(t,{src:"https://x.klarnacdn.net/kp/lib/v1/api.js"})):null}));export{r as Klarna};
