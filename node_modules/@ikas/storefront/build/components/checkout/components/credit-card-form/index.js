import*as e from"react";import{observer as r}from"mobx-react-lite";import{FormItem as t}from"../form-item/index.js";import{FormItemInputMode as a,FormItemType as o}from"../form-item/model.js";import c from"./svg/amex.js";import l from"./svg/master-card.js";import m from"./svg/troy.js";import n from"./svg/visa.js";import i from"../../styles/common.module.scss.js";import s from"../../style.module.scss.js";import u from"./style.module.scss.js";import{useTranslation as d}from"../../../../utils/i18n.js";import{IkasTransactionCardAssociation as p}from"@ikas/storefront-models";var E=r((function(r){var E,v=r.vm,C=d().t,g=v.cardData;if(!g)return null;return e.createElement("div",null,e.createElement("div",{className:s.RowPB},e.createElement(t,{name:"cardnumber",autocomplete:"cc-number",inputMode:a.NUMERIC,type:o.TEXT,label:C("checkout-page:cardNumber"),value:g.cardNumber,onChange:v.onCardNumberChange,errorText:C("checkout-page:cardNumberError"),rightContent:(null===(E=v.installmentInfo)||void 0===E?void 0:E.cardAssociation)?e.createElement("div",{className:u.CardLogo},function(r){switch(r){case p.AMERICAN_EXPRESS:return e.createElement(c,null);case p.MASTER_CARD:return e.createElement(l,null);case p.TROY:return e.createElement(m,null);case p.VISA:return e.createElement(n,null);default:return e.createElement("div",null)}}(v.installmentInfo.cardAssociation)):void 0,hasError:v.isErrorsVisible&&!g.validationResult.cardNumber})),e.createElement("div",{className:s.RowPB},e.createElement(t,{name:"ccname",autocomplete:"cc-name",type:o.TEXT,label:C("checkout-page:cardHolderName"),value:g.cardHolderName,onChange:v.onCardHolderNameChange,errorText:C("checkout-page:cardHolderError"),hasError:v.isErrorsVisible&&!g.validationResult.cardHolderName})),e.createElement("div",{className:[i.Grid,i.Grid2].join(" ")},e.createElement(t,{name:"cc-exp",autocomplete:"cc-exp",inputMode:a.NUMERIC,type:o.TEXT,label:C("checkout-page:cardExpiry"),value:g.expirationDate,onChange:v.onExpirationDateChange,errorText:C("checkout-page:cardExpiryError"),hasError:v.isErrorsVisible&&!g.validationResult.expirationDate}),e.createElement(t,{name:"cvc",autocomplete:"cc-csc",inputMode:a.NUMERIC,type:o.TEXT,label:C("checkout-page:cardCVC"),value:g.cvv,onChange:v.onCvcChange,errorText:C("checkout-page:cardCVCError"),tooltipText:C("checkout-page:cardCVCTooltip"),hasError:v.isErrorsVisible&&!g.validationResult.cvv})))}));export{E as CreditCardForm};
