import { IkasCategoryListParams } from "../models/ui/category-list";
import { IkasAttributeList } from "../models/ui/product-attribute-list";
import { IkasProductListParams } from "../models/ui/product-list";
import { IkasRaffleListParams } from "../models/ui/raffle-list";
import { IkasThemeJsonSettings, IkasThemeJsonPageType, IkasThemeJsonComponentProp, IkasThemeJsonCustomData, IkasBrandListParams, IkasBrandList, IkasCategoryList, IkasProductList, IkasAttributeDetail, IkasNavigationLink, IkasImage, IkasComponentRenderer, IkasBlogListParams, IkasBlogList, IkasBlogCategoryListParams, IkasBlogCategoryList, IkasRaffleList, IkasProduct } from "../models";
import { IkasPageComponentPropValue, IkasSimplePageComponentPropValue, IkasAttributePropValueData, IkasAttributeListPropValueData, IkasBlogPropValueData, IkasBrandPropValueData, IkasCategoryPropValueData, IkasBlogCategoryPropValueData, IkasCustomDataPropValueData, IkasRafflePropValueData, IkasProductPropValueData, IkasSliderPropValueData } from "@ikas/storefront-providers";
import { IkasThemeJsonComponent } from "@ikas/storefront-models";
export declare class IkasPageDataInit {
    static pageSpecificData: any;
    static flatCustomDataList: IkasThemeJsonCustomData[];
    static isBrowser: boolean;
    static setPageSpecificData(pageSpecificData: any, pageType: IkasThemeJsonPageType, isBrowser: boolean): void;
    static isServer(): boolean;
    static initPagePropValues(pageComponentPropValues: IkasSimplePageComponentPropValue[] | IkasPageComponentPropValue[], components: IkasThemeJsonComponent[], customDataList: IkasThemeJsonCustomData[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasPageComponentPropValue[];
    static initPageComponentPropValue(pageComponentPropValue: IkasSimplePageComponentPropValue | IkasPageComponentPropValue, components: IkasThemeJsonComponent[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasPageComponentPropValue;
    static initPropValue(prop: IkasThemeJsonComponentProp, propValue: any, settings: IkasThemeJsonSettings, isBrowser?: boolean): any;
    static initBrandPropValue(propValue: IkasBrandPropValueData): any;
    static initBrandListPropValue(propValue: IkasBrandListParams): IkasBrandList;
    static initCategoryPropValue(propValue: IkasCategoryPropValueData): any;
    static initCategoryListPropValue(propValue: IkasCategoryListParams): IkasCategoryList;
    static initProductListPropValue(propValue: IkasProductListParams): IkasProductList;
    static initProductPropValue(propValue: IkasProductPropValueData): IkasProduct;
    static _initProductOnBrowser(product: IkasProduct): void;
    static initAttributePropValue(propValue: IkasAttributePropValueData): IkasAttributeDetail;
    static initAttributeListPropValue(propValue: IkasAttributeListPropValueData): IkasAttributeList;
    static initLinkPropValue(propValue: IkasNavigationLink | IkasNavigationLink[]): IkasNavigationLink | IkasNavigationLink[] | undefined;
    static initImagePropValue(propValue: IkasImage): IkasImage;
    static initImageListPropValue(propValue: IkasImage[]): IkasImage[];
    static initCustomDataPropValue(customDataValue: IkasCustomDataPropValueData | undefined, settings: IkasThemeJsonSettings, isBrowser?: boolean): any;
    static _initCustomDataPropValue(customDataValue: IkasCustomDataPropValueData | undefined, customData: IkasThemeJsonCustomData, settings: IkasThemeJsonSettings, isBrowser?: boolean): any;
    static initComponentPropValue(propValue: IkasPageComponentPropValue[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasComponentRenderer | undefined;
    static _initComponentPropValue(propValue: IkasPageComponentPropValue[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasComponentRenderer | undefined;
    static initComponentListPropValue(propValue: IkasPageComponentPropValue[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasComponentRenderer[];
    static _initComponentListPropValue(propValue: IkasPageComponentPropValue[], settings: IkasThemeJsonSettings, isBrowser?: boolean): IkasComponentRenderer[];
    static initBlogPropValue(propValue: IkasBlogPropValueData): any;
    static initBlogListPropValue(propValue: IkasBlogListParams): IkasBlogList;
    static initBlogCategoryPropValue(propValue: IkasBlogCategoryPropValueData): any;
    static initBlogCategoryListPropValue(propValue: IkasBlogCategoryListParams): IkasBlogCategoryList;
    static initRafflePropValue(propValue: IkasRafflePropValueData): any;
    static initRaffleListPropValue(propValue: IkasRaffleListParams): IkasRaffleList;
    static initSliderPropValue(propValue: IkasSliderPropValueData): IkasSliderPropValueData;
}
