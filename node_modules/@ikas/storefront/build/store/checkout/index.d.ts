import { APIResponse } from "@ikas/fe-api-client";
import { CheckStocksQueryParams, CreateAdyenClientTokenParams, CreateKlarnaClientTokenParams, CreateSaleTransactionQueryParams, CreateStripePaymentIntentParams, GetAvailableShippingCountriesQueryParams, GetAvailableStockLocationQueryParams, ListCheckoutSettingsQueryParams, ListPaymentGatewayQueryParams, ListStockLocationQueryParams, RetrieveInstallmentInfoQueryParams, GetPayPalClientIdTokenParams, CreatePayPalOrderParams } from "@ikas/storefront-api";
import { IkasAvailableStockLocation, IkasCheckoutSettings, IkasPaymentGateway, IkasStockLocation } from "../../models/data";
export default class CheckoutStore {
    static createSaleTransactionWithCart(params: CreateSaleTransactionQueryParams): Promise<APIResponse<import("@ikas/storefront-api").TransactionResponse> | APIResponse<undefined>>;
    static listPaymentGateway(params: ListPaymentGatewayQueryParams): Promise<APIResponse<IkasPaymentGateway[]>>;
    static retrieveInstallmentInfo(params: RetrieveInstallmentInfoQueryParams): Promise<APIResponse<undefined> | APIResponse<import("@ikas/storefront-api").RetrieveInstallmentInfoResponse>>;
    static checkStocks(params: CheckStocksQueryParams): Promise<APIResponse<undefined> | APIResponse<import("@ikas/storefront-api/build/__api/types").CheckStocksResponse>>;
    static listCheckoutSettings(params: ListCheckoutSettingsQueryParams): Promise<APIResponse<IkasCheckoutSettings[]>>;
    static getAvailableShippingCountries(params: GetAvailableShippingCountriesQueryParams): Promise<APIResponse<undefined> | APIResponse<string[]>>;
    static listStockLocation(params: ListStockLocationQueryParams): Promise<APIResponse<IkasStockLocation[]>>;
    static getAvailableStockLocations(params: GetAvailableStockLocationQueryParams): Promise<APIResponse<IkasAvailableStockLocation[]>>;
    static createStripePaymentIntent(params: CreateStripePaymentIntentParams): Promise<APIResponse<import("@ikas/storefront-api").CreateStripePaymentIntentResponse>>;
    static createKlarnaClientToken(params: CreateKlarnaClientTokenParams): Promise<APIResponse<import("@ikas/storefront-api").CreateKlarnaTokenResponse>>;
    static createAdyenClientToken(params: CreateAdyenClientTokenParams): Promise<APIResponse<import("@ikas/storefront-api").CreateAdyenSessionResponse>>;
    static getPayPalClientId(params: GetPayPalClientIdTokenParams): Promise<APIResponse<import("@ikas/storefront-api").GetPaypalClientIdResponse>>;
    static createPayPalOrder(params: CreatePayPalOrderParams): Promise<APIResponse<import("@ikas/storefront-api").CreatePaypalOrderResponse>>;
}
