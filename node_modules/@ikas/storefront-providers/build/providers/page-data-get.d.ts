import { IkasThemeJson, IkasThemeJsonPageType, IkasThemeJsonPageComponent, IkasThemeJsonComponentProp, IkasThemeJsonPage, IkasMerchantSettings, IkasCustomerReviewSummary, IkasThemeJsonPageSpecification } from "@ikas/storefront-models";
import { IkasLinkMetaDataTargetId } from "./prop-value/link";
import { IkasPageComponentPropValue } from "./types";
export declare class IkasPageDataProvider {
    theme: IkasThemeJson;
    pageType?: IkasThemeJsonPageType | null;
    pageParams: Record<string, any>;
    private pageComponentPropValues;
    pageSpecificData?: any | null;
    merchantSettings?: IkasMerchantSettings | null;
    possiblePageTypes?: IkasThemeJsonPageType[];
    linkMetaDataTargetIds: IkasLinkMetaDataTargetId[];
    productReviewSummary: IkasCustomerReviewSummary | null;
    constructor(theme: IkasThemeJson, pageParams?: Record<string, any>, pageType?: IkasThemeJsonPageType);
    get page(): IkasThemeJsonPage | undefined;
    get nextPageData(): {
        props: any;
    };
    get specification(): IkasThemeJsonPageSpecification | undefined;
    get pageComponents(): IkasThemeJsonPageComponent[];
    get $pageComponentPropValues(): IkasPageComponentPropValue[];
    getMerchantSettings(): Promise<void>;
    getPageData(): Promise<void>;
    getProductReviewSummary(): Promise<void>;
    getPageSpecificData(): Promise<void>;
    getPageComponentPropValues(pageComponent: IkasThemeJsonPageComponent): Promise<IkasPageComponentPropValue>;
    getPageComponentPropValue(pageComponent: IkasThemeJsonPageComponent, prop: IkasThemeJsonComponentProp): Promise<any>;
    private setPageMetaData;
    setLinkSlugs(): Promise<[void, void, void]>;
    private getLinkSlugs;
    private getFlatCustomData;
}
